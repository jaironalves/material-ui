{
  "description": "",
  "displayName": "SvgIcon",
  "methods": [],
  "props": {
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Node passed into the SVG element.",
      "tags": []
    },
    "classes": {
      "type": {
        "name": "object"
      },
      "required": false,
      "description": "Override or extend the styles applied to the component.\r\nSee [CSS API](#css) below for more details.",
      "tags": []
    },
    "color": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'action'",
            "computed": false
          },
          {
            "value": "'disabled'",
            "computed": false
          },
          {
            "value": "'error'",
            "computed": false
          },
          {
            "value": "'inherit'",
            "computed": false
          },
          {
            "value": "'primary'",
            "computed": false
          },
          {
            "value": "'secondary'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "The color of the component. It supports those theme colors that make sense for this component.\r\nYou can use the `htmlColor` prop to apply a color attribute to the SVG element.",
      "defaultValue": {
        "value": "'inherit'",
        "computed": false
      },
      "tags": []
    },
    "component": {
      "type": {
        "name": "elementType"
      },
      "required": false,
      "description": "The component used for the root node.\r\nEither a string to use a HTML element or a component.",
      "defaultValue": {
        "value": "'svg'",
        "computed": false
      },
      "tags": []
    },
    "fontSize": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'default'",
            "computed": false
          },
          {
            "value": "'inherit'",
            "computed": false
          },
          {
            "value": "'large'",
            "computed": false
          },
          {
            "value": "'small'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.",
      "defaultValue": {
        "value": "'default'",
        "computed": false
      },
      "tags": []
    },
    "htmlColor": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Applies a color attribute to the SVG element.",
      "tags": []
    },
    "shapeRendering": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "The shape-rendering attribute. The behavior of the different options is described on the\r\n[MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\r\nIf you are having issues with blurry icons you should investigate this prop.",
      "tags": []
    },
    "titleAccess": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Provides a human-readable title for the element that contains it.\r\nhttps://www.w3.org/TR/SVG-access/#Equivalent",
      "tags": []
    },
    "viewBox": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Allows you to redefine what the coordinates without units mean inside an SVG element.\r\nFor example, if the SVG element is 500 (width) by 200 (height),\r\nand you pass viewBox=\"0 0 50 20\",\r\nthis means that the coordinates inside the SVG will go from the top left corner (0,0)\r\nto bottom right (50,20) and each unit will be worth 10px.",
      "defaultValue": {
        "value": "'0 0 24 24'",
        "computed": false
      },
      "tags": []
    }
  },
  "name": "SvgIcon",
  "styles": {
    "classes": [
      "root",
      "colorPrimary",
      "colorSecondary",
      "colorAction",
      "colorError",
      "colorDisabled",
      "fontSizeInherit",
      "fontSizeSmall",
      "fontSizeLarge"
    ],
    "name": "MuiSvgIcon",
    "descriptions": {
      "root": "Styles applied to the root element.",
      "colorPrimary": "Styles applied to the root element if `color=\"primary\"`.",
      "colorSecondary": "Styles applied to the root element if `color=\"secondary\"`.",
      "colorAction": "Styles applied to the root element if `color=\"action\"`.",
      "colorError": "Styles applied to the root element if `color=\"error\"`.",
      "colorDisabled": "Styles applied to the root element if `color=\"disabled\"`.",
      "fontSizeInherit": "Styles applied to the root element if `fontSize=\"inherit\"`.",
      "fontSizeSmall": "Styles applied to the root element if `fontSize=\"small\"`.",
      "fontSizeLarge": "Styles applied to the root element if `fontSize=\"large\"`."
    },
    "globalClasses": {
      "root": "MuiSvgIcon-root",
      "colorPrimary": "MuiSvgIcon-colorPrimary",
      "colorSecondary": "MuiSvgIcon-colorSecondary",
      "colorAction": "MuiSvgIcon-colorAction",
      "colorError": "MuiSvgIcon-colorError",
      "colorDisabled": "MuiSvgIcon-colorDisabled",
      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge"
    }
  },
  "spread": true,
  "forwardsRefTo": "SVGSVGElement",
  "filename": "\\packages\\material-ui\\src\\SvgIcon\\SvgIcon.js",
  "inheritance": null,
  "usedInPages": [
    "/components/icons",
    "/components/material-icons"
  ]
}
