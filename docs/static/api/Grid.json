{
  "description": "",
  "methods": [],
  "props": {
    "alignContent": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'stretch'",
            "computed": false
          },
          {
            "value": "'center'",
            "computed": false
          },
          {
            "value": "'flex-start'",
            "computed": false
          },
          {
            "value": "'flex-end'",
            "computed": false
          },
          {
            "value": "'space-between'",
            "computed": false
          },
          {
            "value": "'space-around'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Defines the `align-content` style property.\nIt's applied for all screen sizes.",
      "defaultValue": {
        "value": "'stretch'",
        "computed": false
      },
      "tags": []
    },
    "alignItems": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'flex-start'",
            "computed": false
          },
          {
            "value": "'center'",
            "computed": false
          },
          {
            "value": "'flex-end'",
            "computed": false
          },
          {
            "value": "'stretch'",
            "computed": false
          },
          {
            "value": "'baseline'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Defines the `align-items` style property.\nIt's applied for all screen sizes.",
      "defaultValue": {
        "value": "'stretch'",
        "computed": false
      },
      "tags": []
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "The content of the component.",
      "tags": []
    },
    "classes": {
      "type": {
        "name": "object"
      },
      "required": true,
      "description": "Override or extend the styles applied to the component.\nSee [CSS API](#css) below for more details.",
      "tags": []
    },
    "component": {
      "type": {
        "name": "elementType"
      },
      "required": false,
      "description": "The component used for the root node.\nEither a string to use a DOM element or a component.",
      "defaultValue": {
        "value": "'div'",
        "computed": false
      },
      "tags": []
    },
    "container": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the component will have the flex *container* behavior.\nYou should be wrapping *items* with a *container*.",
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": []
    },
    "direction": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'row'",
            "computed": false
          },
          {
            "value": "'row-reverse'",
            "computed": false
          },
          {
            "value": "'column'",
            "computed": false
          },
          {
            "value": "'column-reverse'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Defines the `flex-direction` style property.\nIt is applied for all screen sizes.",
      "defaultValue": {
        "value": "'row'",
        "computed": false
      },
      "tags": []
    },
    "item": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the component will have the flex *item* behavior.\nYou should be wrapping *items* with a *container*.",
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": []
    },
    "justify": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'flex-start'",
            "computed": false
          },
          {
            "value": "'center'",
            "computed": false
          },
          {
            "value": "'flex-end'",
            "computed": false
          },
          {
            "value": "'space-between'",
            "computed": false
          },
          {
            "value": "'space-around'",
            "computed": false
          },
          {
            "value": "'space-evenly'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Defines the `justify-content` style property.\nIt is applied for all screen sizes.",
      "defaultValue": {
        "value": "'flex-start'",
        "computed": false
      },
      "tags": []
    },
    "lg": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "false",
            "computed": false
          },
          {
            "value": "'auto'",
            "computed": false
          },
          {
            "value": "true",
            "computed": false
          },
          {
            "value": "1",
            "computed": false
          },
          {
            "value": "2",
            "computed": false
          },
          {
            "value": "3",
            "computed": false
          },
          {
            "value": "4",
            "computed": false
          },
          {
            "value": "5",
            "computed": false
          },
          {
            "value": "6",
            "computed": false
          },
          {
            "value": "7",
            "computed": false
          },
          {
            "value": "8",
            "computed": false
          },
          {
            "value": "9",
            "computed": false
          },
          {
            "value": "10",
            "computed": false
          },
          {
            "value": "11",
            "computed": false
          },
          {
            "value": "12",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Defines the number of grids the component is going to use.\nIt's applied for the `lg` breakpoint and wider screens if not overridden.",
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": []
    },
    "md": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "false",
            "computed": false
          },
          {
            "value": "'auto'",
            "computed": false
          },
          {
            "value": "true",
            "computed": false
          },
          {
            "value": "1",
            "computed": false
          },
          {
            "value": "2",
            "computed": false
          },
          {
            "value": "3",
            "computed": false
          },
          {
            "value": "4",
            "computed": false
          },
          {
            "value": "5",
            "computed": false
          },
          {
            "value": "6",
            "computed": false
          },
          {
            "value": "7",
            "computed": false
          },
          {
            "value": "8",
            "computed": false
          },
          {
            "value": "9",
            "computed": false
          },
          {
            "value": "10",
            "computed": false
          },
          {
            "value": "11",
            "computed": false
          },
          {
            "value": "12",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Defines the number of grids the component is going to use.\nIt's applied for the `md` breakpoint and wider screens if not overridden.",
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": []
    },
    "sm": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "false",
            "computed": false
          },
          {
            "value": "'auto'",
            "computed": false
          },
          {
            "value": "true",
            "computed": false
          },
          {
            "value": "1",
            "computed": false
          },
          {
            "value": "2",
            "computed": false
          },
          {
            "value": "3",
            "computed": false
          },
          {
            "value": "4",
            "computed": false
          },
          {
            "value": "5",
            "computed": false
          },
          {
            "value": "6",
            "computed": false
          },
          {
            "value": "7",
            "computed": false
          },
          {
            "value": "8",
            "computed": false
          },
          {
            "value": "9",
            "computed": false
          },
          {
            "value": "10",
            "computed": false
          },
          {
            "value": "11",
            "computed": false
          },
          {
            "value": "12",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Defines the number of grids the component is going to use.\nIt's applied for the `sm` breakpoint and wider screens if not overridden.",
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": []
    },
    "spacing": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "0",
            "computed": false
          },
          {
            "value": "1",
            "computed": false
          },
          {
            "value": "2",
            "computed": false
          },
          {
            "value": "3",
            "computed": false
          },
          {
            "value": "4",
            "computed": false
          },
          {
            "value": "5",
            "computed": false
          },
          {
            "value": "6",
            "computed": false
          },
          {
            "value": "7",
            "computed": false
          },
          {
            "value": "8",
            "computed": false
          },
          {
            "value": "9",
            "computed": false
          },
          {
            "value": "10",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Defines the space between the type `item` component.\nIt can only be used on a type `container` component.",
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "tags": []
    },
    "wrap": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'nowrap'",
            "computed": false
          },
          {
            "value": "'wrap'",
            "computed": false
          },
          {
            "value": "'wrap-reverse'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Defines the `flex-wrap` style property.\nIt's applied for all screen sizes.",
      "defaultValue": {
        "value": "'wrap'",
        "computed": false
      },
      "tags": []
    },
    "xl": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "false",
            "computed": false
          },
          {
            "value": "'auto'",
            "computed": false
          },
          {
            "value": "true",
            "computed": false
          },
          {
            "value": "1",
            "computed": false
          },
          {
            "value": "2",
            "computed": false
          },
          {
            "value": "3",
            "computed": false
          },
          {
            "value": "4",
            "computed": false
          },
          {
            "value": "5",
            "computed": false
          },
          {
            "value": "6",
            "computed": false
          },
          {
            "value": "7",
            "computed": false
          },
          {
            "value": "8",
            "computed": false
          },
          {
            "value": "9",
            "computed": false
          },
          {
            "value": "10",
            "computed": false
          },
          {
            "value": "11",
            "computed": false
          },
          {
            "value": "12",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Defines the number of grids the component is going to use.\nIt's applied for the `xl` breakpoint and wider screens.",
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": []
    },
    "xs": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "false",
            "computed": false
          },
          {
            "value": "'auto'",
            "computed": false
          },
          {
            "value": "true",
            "computed": false
          },
          {
            "value": "1",
            "computed": false
          },
          {
            "value": "2",
            "computed": false
          },
          {
            "value": "3",
            "computed": false
          },
          {
            "value": "4",
            "computed": false
          },
          {
            "value": "5",
            "computed": false
          },
          {
            "value": "6",
            "computed": false
          },
          {
            "value": "7",
            "computed": false
          },
          {
            "value": "8",
            "computed": false
          },
          {
            "value": "9",
            "computed": false
          },
          {
            "value": "10",
            "computed": false
          },
          {
            "value": "11",
            "computed": false
          },
          {
            "value": "12",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Defines the number of grids the component is going to use.\nIt's applied for all the screen sizes with the lowest priority.",
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": []
    },
    "zeroMinWidth": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, it sets `min-width: 0` on the item.\nRefer to the limitations section of the documentation to better understand the use case.",
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": []
    }
  },
  "name": "Grid",
  "styles": {
    "classes": [
      "root",
      "container",
      "item",
      "zeroMinWidth",
      "direction-xs-column",
      "direction-xs-column-reverse",
      "direction-xs-row-reverse",
      "wrap-xs-nowrap",
      "wrap-xs-wrap-reverse",
      "align-items-xs-center",
      "align-items-xs-flex-start",
      "align-items-xs-flex-end",
      "align-items-xs-baseline",
      "align-content-xs-center",
      "align-content-xs-flex-start",
      "align-content-xs-flex-end",
      "align-content-xs-space-between",
      "align-content-xs-space-around",
      "justify-xs-center",
      "justify-xs-flex-end",
      "justify-xs-space-between",
      "justify-xs-space-around",
      "justify-xs-space-evenly",
      "spacing-xs-1",
      "spacing-xs-2",
      "spacing-xs-3",
      "spacing-xs-4",
      "spacing-xs-5",
      "spacing-xs-6",
      "spacing-xs-7",
      "spacing-xs-8",
      "spacing-xs-9",
      "spacing-xs-10",
      "grid-xs-auto",
      "grid-xs-true",
      "grid-xs-1",
      "grid-xs-2",
      "grid-xs-3",
      "grid-xs-4",
      "grid-xs-5",
      "grid-xs-6",
      "grid-xs-7",
      "grid-xs-8",
      "grid-xs-9",
      "grid-xs-10",
      "grid-xs-11",
      "grid-xs-12"
    ],
    "name": "MuiGrid",
    "descriptions": {
      "root": "Styles applied to the root element",
      "container": "Styles applied to the root element if `container={true}`.",
      "item": "Styles applied to the root element if `item={true}`.",
      "zeroMinWidth": "Styles applied to the root element if `zeroMinWidth={true}`.",
      "": "Styles applied to the root element if `justify=\"space-evenly\"`."
    },
    "globalClasses": {
      "root": "MuiGrid-root",
      "container": "MuiGrid-container",
      "item": "MuiGrid-item",
      "zeroMinWidth": "MuiGrid-zeroMinWidth",
      "direction-xs-column": "MuiGrid-direction-xs-column",
      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
      "align-items-xs-center": "MuiGrid-align-items-xs-center",
      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
      "align-content-xs-center": "MuiGrid-align-content-xs-center",
      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
      "justify-xs-center": "MuiGrid-justify-xs-center",
      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
      "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
      "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
      "spacing-xs-1": "MuiGrid-spacing-xs-1",
      "spacing-xs-2": "MuiGrid-spacing-xs-2",
      "spacing-xs-3": "MuiGrid-spacing-xs-3",
      "spacing-xs-4": "MuiGrid-spacing-xs-4",
      "spacing-xs-5": "MuiGrid-spacing-xs-5",
      "spacing-xs-6": "MuiGrid-spacing-xs-6",
      "spacing-xs-7": "MuiGrid-spacing-xs-7",
      "spacing-xs-8": "MuiGrid-spacing-xs-8",
      "spacing-xs-9": "MuiGrid-spacing-xs-9",
      "spacing-xs-10": "MuiGrid-spacing-xs-10",
      "grid-xs-auto": "MuiGrid-grid-xs-auto",
      "grid-xs-true": "MuiGrid-grid-xs-true",
      "grid-xs-1": "MuiGrid-grid-xs-1",
      "grid-xs-2": "MuiGrid-grid-xs-2",
      "grid-xs-3": "MuiGrid-grid-xs-3",
      "grid-xs-4": "MuiGrid-grid-xs-4",
      "grid-xs-5": "MuiGrid-grid-xs-5",
      "grid-xs-6": "MuiGrid-grid-xs-6",
      "grid-xs-7": "MuiGrid-grid-xs-7",
      "grid-xs-8": "MuiGrid-grid-xs-8",
      "grid-xs-9": "MuiGrid-grid-xs-9",
      "grid-xs-10": "MuiGrid-grid-xs-10",
      "grid-xs-11": "MuiGrid-grid-xs-11",
      "grid-xs-12": "MuiGrid-grid-xs-12"
    }
  },
  "spread": true,
  "forwardsRefTo": "HTMLDivElement",
  "filename": "/packages/material-ui/src/Grid/Grid.js",
  "inheritance": null,
  "usedInPages": [
    "/components/grid"
  ]
}
