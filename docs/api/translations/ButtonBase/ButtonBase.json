{
  "description": "`ButtonBase` contains as few styles as possible.\r\nIt aims to be a simple building block for creating a button.\r\nIt contains a load of style reset and some focus/ripple logic.",
  "propAction": "A ref for imperative actions.\r\nIt currently only supports `focusVisible()` action.",
  "propCenterRipple": "If `true`, the ripples are centered.\r\nThey won't start at the cursor interaction position.",
  "propChildren": "The content of the component.",
  "propClasses": "Override or extend the styles applied to the component.",
  "propComponent": "The component used for the root node.\r\nEither a string to use a HTML element or a component.",
  "propDisabled": "If `true`, the base button is disabled.",
  "propDisableRipple": "If `true`, the ripple effect is disabled.\r\n\r\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\r\nto highlight the element by applying separate styles with the `focusVisibleClassName`.",
  "propDisableTouchRipple": "If `true`, the touch ripple effect is disabled.",
  "propFocusRipple": "If `true`, the base button will have a keyboard focus ripple.",
  "propFocusVisibleClassName": "This prop can help a person know which element has the keyboard focus.\r\nThe class name will be applied when the element gain the focus through a keyboard interaction.\r\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\r\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\r\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\r\nif needed.",
  "propOnFocusVisible": "Callback fired when the component is focused with a keyboard.\r\nWe trigger a `onFocus` callback too.",
  "propTouchRippleProps": "Props applied to the `TouchRipple` element.",
  "stylesRoot": "Styles applied to the root element.",
  "stylesDisabled": "Pseudo-class applied to the root element if `disabled={true}`.",
  "stylesFocusVisible": "Pseudo-class applied to the root element if keyboard focused.",
  "styles": "TouchRipple is only needed client-side, x2 boost on the server."
}
