{
  "propAriaLabel": "The aria-label of the button element.\r\nAlso used to provide the `id` for the `SpeedDial` element and its children.",
  "propChildren": "SpeedDialActions to display when the SpeedDial is `open`.",
  "propClasses": "Override or extend the styles applied to the component.",
  "propDirection": "The direction the actions open relative to the floating action button.",
  "propFabProps": "Props applied to the [`Fab`](/api/fab/) element.",
  "propHidden": "If `true`, the SpeedDial is hidden.",
  "propIcon": "The icon to display in the SpeedDial Fab. The `SpeedDialIcon` component\r\nprovides a default Icon with animation.",
  "propOnClose": "Callback fired when the component requests to be closed.",
  "propOnOpen": "Callback fired when the component requests to be open.",
  "propOpen": "If `true`, the SpeedDial is open.",
  "propOpenIcon": "The icon to display in the SpeedDial Fab when the SpeedDial is open.",
  "propTransitionComponent": "The component used for the transition.\r\n[Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.",
  "propTransitionDuration": "The duration for the transition, in milliseconds.\r\nYou may specify a single timeout for all transitions, or individually with an object.",
  "propTransitionProps": "Props applied to the transition element.\r\nBy default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.",
  "stylesRoot": "Styles applied to the root element.",
  "stylesFab": "Styles applied to the Fab component.",
  "stylesDirectionUp": "Styles applied to the root if direction=\"up\"",
  "stylesDirectionDown": "Styles applied to the root if direction=\"down\"",
  "stylesDirectionLeft": "Styles applied to the root if direction=\"left\"",
  "stylesDirectionRight": "Styles applied to the root if direction=\"right\"",
  "stylesActions": "Styles applied to the actions (`children` wrapper) element.",
  "stylesActionsClosed": "Styles applied to the actions (`children` wrapper) element if `open={false}`."
}
