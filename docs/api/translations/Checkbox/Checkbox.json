{
  "propChecked": "If `true`, the component is checked.",
  "propCheckedIcon": "The icon to display when the component is checked.",
  "propClasses": "Override or extend the styles applied to the component.",
  "propColor": "The color of the component. It supports those theme colors that make sense for this component.",
  "propDisabled": "If `true`, the checkbox is disabled.",
  "propDisableRipple": "If `true`, the ripple effect is disabled.",
  "propIcon": "The icon to display when the component is unchecked.",
  "propId": "The id of the `input` element.",
  "propIndeterminate": "If `true`, the component appears indeterminate.\r\nThis does not set the native input element to indeterminate due\r\nto inconsistent behavior across browsers.\r\nHowever, we set a `data-indeterminate` attribute on the input.",
  "propIndeterminateIcon": "The icon to display when the component is indeterminate.",
  "propInputProps": "[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.",
  "propInputRef": "Pass a ref to the `input` element.",
  "propOnChange": "Callback fired when the state is changed.",
  "propRequired": "If `true`, the `input` element is required.",
  "propSize": "The size of the checkbox.\r\n`small` is equivalent to the dense checkbox styling.",
  "propValue": "The value of the component. The DOM API casts this to a string.\r\nThe browser uses \"on\" as the default value.",
  "stylesRoot": "Styles applied to the root element.",
  "stylesChecked": "Pseudo-class applied to the root element if `checked={true}`.",
  "stylesDisabled": "Pseudo-class applied to the root element if `disabled={true}`.",
  "stylesIndeterminate": "Pseudo-class applied to the root element if `indeterminate={true}`.",
  "stylesColorPrimary": "Styles applied to the root element if `color=\"primary\"`.",
  "stylesColorSecondary": "Styles applied to the root element if `color=\"secondary\"`."
}
