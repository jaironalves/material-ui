{
  "propChildren": "Node passed into the SVG element.",
  "propClasses": "Override or extend the styles applied to the component.",
  "propColor": "The color of the component. It supports those theme colors that make sense for this component.\r\nYou can use the `htmlColor` prop to apply a color attribute to the SVG element.",
  "propComponent": "The component used for the root node.\r\nEither a string to use a HTML element or a component.",
  "propFontSize": "The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.",
  "propHtmlColor": "Applies a color attribute to the SVG element.",
  "propShapeRendering": "The shape-rendering attribute. The behavior of the different options is described on the\r\n[MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\r\nIf you are having issues with blurry icons you should investigate this prop.",
  "propTitleAccess": "Provides a human-readable title for the element that contains it.\r\nhttps://www.w3.org/TR/SVG-access/#Equivalent",
  "propViewBox": "Allows you to redefine what the coordinates without units mean inside an SVG element.\r\nFor example, if the SVG element is 500 (width) by 200 (height),\r\nand you pass viewBox=\"0 0 50 20\",\r\nthis means that the coordinates inside the SVG will go from the top left corner (0,0)\r\nto bottom right (50,20) and each unit will be worth 10px.",
  "stylesRoot": "Styles applied to the root element.",
  "stylesColorPrimary": "Styles applied to the root element if `color=\"primary\"`.",
  "stylesColorSecondary": "Styles applied to the root element if `color=\"secondary\"`.",
  "stylesColorAction": "Styles applied to the root element if `color=\"action\"`.",
  "stylesColorError": "Styles applied to the root element if `color=\"error\"`.",
  "stylesColorDisabled": "Styles applied to the root element if `color=\"disabled\"`.",
  "stylesFontSizeInherit": "Styles applied to the root element if `fontSize=\"inherit\"`.",
  "stylesFontSizeSmall": "Styles applied to the root element if `fontSize=\"small\"`.",
  "stylesFontSizeLarge": "Styles applied to the root element if `fontSize=\"large\"`."
}
