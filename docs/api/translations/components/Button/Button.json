{
  "propChildren": "The content of the button.",
  "propClasses": "Override or extend the styles applied to the component.",
  "propColor": "The color of the component. It supports those theme colors that make sense for this component.",
  "propComponent": "The component used for the root node.\r\nEither a string to use a HTML element or a component.",
  "propDisabled": "If `true`, the button is disabled.",
  "propDisableElevation": "If `true`, no elevation is used.",
  "propDisableFocusRipple": "If `true`, the  keyboard focus ripple is disabled.",
  "propDisableRipple": "If `true`, the ripple effect is disabled.\r\n\r\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\r\nto highlight the element by applying separate styles with the `focusVisibleClassName`.",
  "propEndIcon": "Element placed after the children.",
  "propFullWidth": "If `true`, the button will take up the full width of its container.",
  "propHref": "The URL to link to when the button is clicked.\r\nIf defined, an `a` element will be used as the root node.",
  "propSize": "The size of the button.\r\n`small` is equivalent to the dense button styling.",
  "propStartIcon": "Element placed before the children.",
  "propVariant": "The variant to use.",
  "stylesRoot": "Styles applied to the root element.",
  "stylesLabel": "Styles applied to the span element that wraps the children.",
  "stylesText": "Styles applied to the root element if `variant=\"text\"`.",
  "stylesTextPrimary": "Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`.",
  "stylesTextSecondary": "Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`.",
  "stylesOutlined": "Styles applied to the root element if `variant=\"outlined\"`.",
  "stylesOutlinedPrimary": "Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`.",
  "stylesOutlinedSecondary": "Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`.",
  "stylesContained": "Styles applied to the root element if `variant=\"contained\"`.",
  "stylesContainedPrimary": "Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`.",
  "stylesContainedSecondary": "Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`.",
  "stylesDisableElevation": "Styles applied to the root element if `disableElevation={true}`.",
  "stylesFocusVisible": "Pseudo-class applied to the ButtonBase root element if the button is keyboard focused.",
  "stylesDisabled": "Pseudo-class applied to the root element if `disabled={true}`.",
  "stylesColorInherit": "Styles applied to the root element if `color=\"inherit\"`.",
  "stylesTextSizeSmall": "Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`.",
  "stylesTextSizeLarge": "Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`.",
  "stylesOutlinedSizeSmall": "Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`.",
  "stylesOutlinedSizeLarge": "Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`.",
  "stylesContainedSizeSmall": "Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`.",
  "stylesContainedSizeLarge": "Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`.",
  "stylesSizeSmall": "Styles applied to the root element if `size=\"small\"`.",
  "stylesSizeLarge": "Styles applied to the root element if `size=\"large\"`.",
  "stylesFullWidth": "Styles applied to the root element if `fullWidth={true}`.",
  "stylesStartIcon": "Styles applied to the startIcon element if supplied.",
  "stylesEndIcon": "Styles applied to the endIcon element if supplied.",
  "stylesIconSizeSmall": "Styles applied to the icon element if supplied and `size=\"small\"`.",
  "stylesIconSizeMedium": "Styles applied to the icon element if supplied and `size=\"medium\"`.",
  "stylesIconSizeLarge": "Styles applied to the icon element if supplied and `size=\"large\"`."
}
