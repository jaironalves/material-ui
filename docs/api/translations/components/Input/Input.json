{
  "propAutoComplete": "This prop helps users to fill forms faster, especially on mobile devices.\r\nThe name can be confusing, as it's more like an autofill.\r\nYou can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).",
  "propAutoFocus": "If `true`, the `input` element is focused during the first mount.",
  "propClasses": "Override or extend the styles applied to the component.",
  "propColor": "The color of the component. It supports those theme colors that make sense for this component.\r\nThe prop defaults to the value (`'primary'`) inherited from the parent FormControl component.",
  "propDefaultValue": "The default `input` element value. Use when the component is not controlled.",
  "propDisabled": "If `true`, the `input` element is disabled.\r\nThe prop defaults to the value (`false`) inherited from the parent FormControl component.",
  "propDisableUnderline": "If `true`, the input will not have an underline.",
  "propEndAdornment": "End `InputAdornment` for this component.",
  "propError": "If `true`, the input will indicate an error.\r\nThe prop defaults to the value (`false`) inherited from the parent FormControl component.",
  "propFullWidth": "If `true`, the input will take up the full width of its container.",
  "propId": "The id of the `input` element.",
  "propInputComponent": "The component used for the `input` element.\r\nEither a string to use a HTML element or a component.",
  "propInputProps": "[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.",
  "propInputRef": "Pass a ref to the `input` element.",
  "propMargin": "If `dense`, will adjust vertical spacing. This is normally obtained via context from\r\nFormControl.\r\nThe prop defaults to the value (`'none'`) inherited from the parent FormControl component.",
  "propMaxRows": "Maximum number of rows to display when multiline option is set to true.",
  "propMinRows": "Minimum number of rows to display when multiline option is set to true.",
  "propMultiline": "If `true`, a `textarea` element is rendered.",
  "propName": "Name attribute of the `input` element.",
  "propOnChange": "Callback fired when the value is changed.",
  "propPlaceholder": "The short hint displayed in the input before the user enters a value.",
  "propReadOnly": "It prevents the user from changing the value of the field\r\n(not from interacting with the field).",
  "propRequired": "If `true`, the `input` element is required.\r\nThe prop defaults to the value (`false`) inherited from the parent FormControl component.",
  "propRows": "Number of rows to display when multiline option is set to true.",
  "propStartAdornment": "Start `InputAdornment` for this component.",
  "propType": "Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).",
  "propValue": "The value of the `input` element, required for a controlled component.",
  "stylesRoot": "Styles applied to the root element.",
  "stylesFormControl": "Styles applied to the root element if the component is a descendant of `FormControl`.",
  "stylesFocused": "Styles applied to the root element if the component is focused.",
  "stylesDisabled": "Styles applied to the root element if `disabled={true}`.",
  "stylesColorSecondary": "Styles applied to the root element if color secondary.",
  "stylesUnderline": "Styles applied to the root element unless `disableUnderline={true}`.",
  "stylesError": "Pseudo-class applied to the root element if `error={true}`.",
  "stylesMarginDense": "Styles applied to the `input` element if `margin=\"dense\"`.",
  "stylesMultiline": "Styles applied to the root element if `multiline={true}`.",
  "stylesFullWidth": "Styles applied to the root element if `fullWidth={true}`.",
  "stylesInput": "Styles applied to the `input` element.",
  "stylesInputMarginDense": "Styles applied to the `input` element if `margin=\"dense\"`.",
  "stylesInputMultiline": "Styles applied to the `input` element if `multiline={true}`.",
  "stylesInputTypeSearch": "Styles applied to the `input` element if `type=\"search\"`."
}
