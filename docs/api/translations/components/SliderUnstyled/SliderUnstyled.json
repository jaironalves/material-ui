{
  "propAria-label": "The label of the slider.",
  "propAria-labelledby": "The id of the element containing a label for the slider.",
  "propAria-valuetext": "A string value that provides a user-friendly name for the current value of the slider.",
  "propColor": "The color of the component. It supports those theme colors that make sense for this component.",
  "propComponent": "The component used for the root node.\r\nEither a string to use a HTML element or a component.",
  "propComponents": "The components used for each slot inside the Slider.\r\nEither a string to use a HTML element or a component.",
  "propComponentsProps": "The props used for each slot inside the Slider.",
  "propDefaultValue": "The default element value. Use when the component is not controlled.",
  "propDisabled": "If `true`, the slider is disabled.",
  "propGetAriaLabel": "Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.",
  "propGetAriaValueText": "Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.",
  "propIsRtl": "Indicates whether the theme context has rtl direction. It is set automatically.",
  "propMarks": "Marks indicate predetermined values to which the user can move the slider.\r\nIf `true` the marks are spaced according the value of the `step` prop.\r\nIf an array, it should contain objects with `value` and an optional `label` keys.",
  "propMax": "The maximum allowed value of the slider.\r\nShould not be equal to min.",
  "propMin": "The minimum allowed value of the slider.\r\nShould not be equal to max.",
  "propName": "Name attribute of the hidden `input` element.",
  "propOnChange": "Callback function that is fired when the slider's value changed.",
  "propOnChangeCommitted": "Callback function that is fired when the `mouseup` is triggered.",
  "propOrientation": "The slider orientation.",
  "propScale": "A transformation function, to change the scale of the slider.",
  "propStep": "The granularity with which the slider can step through values. (A \"discrete\" slider.)\r\nThe `min` prop serves as the origin for the valid values.\r\nWe recommend (max - min) to be evenly divisible by the step.\r\n\r\nWhen step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.",
  "propTrack": "The track presentation:\r\n\r\n- `normal` the track will render a bar representing the slider value.\r\n- `inverted` the track will render a bar representing the remaining slider value.\r\n- `false` the track will render without a bar.",
  "propValue": "The value of the slider.\r\nFor ranged sliders, provide an array with two values.",
  "propValueLabelDisplay": "Controls when the value label is displayed:\r\n\r\n- `auto` the value label will display when the thumb is hovered or focused.\r\n- `on` will display persistently.\r\n- `off` will never display.",
  "propValueLabelFormat": "The format function the value label's value.\r\n\r\nWhen a function is provided, it should have the following signature:\r\n\r\n- {number} value The value label's value to format\r\n- {number} index The value label's index to format"
}
