{
  "propAction": "Callback fired when the component mounts.\r\nThis is useful when you want to trigger an action programmatically.\r\nIt supports two actions: `updateIndicator()` and `updateScrollButtons()`",
  "propAllowScrollButtonsMobile": "If `true`, the scroll buttons aren't forced hidden on mobile.\r\nBy default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.",
  "propAria-label": "The label for the Tabs as a string.",
  "propAria-labelledby": "An id or list of ids separated by a space that label the Tabs.",
  "propCentered": "If `true`, the tabs are centered.\r\nThis prop is intended for large views.",
  "propChildren": "The content of the component.",
  "propClasses": "Override or extend the styles applied to the component.",
  "propComponent": "The component used for the root node.\r\nEither a string to use a HTML element or a component.",
  "propIndicatorColor": "Determines the color of the indicator.",
  "propOnChange": "Callback fired when the value changes.",
  "propOrientation": "The tabs orientation (layout flow direction).",
  "propScrollButtonComponent": "The component used to render the scroll buttons.",
  "propScrollButtons": "Determine behavior of scroll buttons when tabs are set to scroll:\r\n\r\n- `auto` will only present them when not all the items are visible.\r\n- `true` will always present them.\r\n- `false` will never present them.\r\n\r\nBy default the scroll buttons are hidden on mobile.\r\nThis behavior can be disabled with `allowScrollButtonsMobile`.",
  "propSelectionFollowsFocus": "If `true` the selected tab changes on focus. Otherwise it only\r\nchanges on activation.",
  "propTabIndicatorProps": "Props applied to the tab indicator element.",
  "propTabScrollButtonProps": "Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.",
  "propTextColor": "Determines the color of the `Tab`.",
  "propValue": "The value of the currently selected `Tab`.\r\nIf you don't want any selected `Tab`, you can set this prop to `false`.",
  "propVariant": "Determines additional display behavior of the tabs:\r\n\r\n - `scrollable` will invoke scrolling properties and allow for horizontally\r\n scrolling (or swiping) of the tab bar.\r\n -`fullWidth` will make the tabs grow to use all the available space,\r\n which should be used for small views, like on mobile.\r\n - `standard` will render the default state.",
  "propVisibleScrollbar": "If `true`, the scrollbar is visible. It can be useful when displaying\r\na long vertical list of tabs.",
  "stylesRoot": "Styles applied to the root element.",
  "stylesVertical": "Styles applied to the root element if `orientation=\"vertical\"`.",
  "stylesFlexContainer": "Styles applied to the flex container element.",
  "stylesFlexContainerVertical": "Styles applied to the flex container element if `orientation=\"vertical\"`.",
  "stylesCentered": "Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`.",
  "stylesScroller": "Styles applied to the tablist element.",
  "stylesFixed": "Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b.",
  "stylesScrollableX": "Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"horizontal\"`.",
  "stylesScrollableY": "Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"vertical\"`.",
  "stylesHideScrollbar": "Styles applied to the tablist element if `variant=\"scrollable\"` and `visibleScrollbar={false}`.",
  "stylesScrollButtons": "Styles applied to the `ScrollButtonComponent` component.",
  "stylesScrollButtonsHideMobile": "Styles applied to the `ScrollButtonComponent` component if `allowScrollButtonsMobile={true}`.",
  "stylesIndicator": "Styles applied to the `TabIndicator` component."
}
