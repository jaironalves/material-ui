{
  "description": "",
  "displayName": "LoadingButton",
  "methods": [],
  "props": {
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "The content of the button.",
      "tags": []
    },
    "classes": {
      "type": {
        "name": "object"
      },
      "required": false,
      "description": "Override or extend the styles applied to the component.\nSee [CSS API](#css) below for more details.",
      "tags": []
    },
    "disabled": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the button will be disabled.",
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": []
    },
    "pending": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the pending indicator will be shown.",
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": []
    },
    "pendingIndicator": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Element placed before the children if the button is in pending state.",
      "defaultValue": {
        "value": "<CircularProgress color=\"inherit\" size={16} />",
        "computed": false
      },
      "tags": []
    },
    "pendingPosition": {
      "type": {
        "name": "chained",
        "raw": "chainPropTypes/* @chainedAs [\"start\", \"end\", \"center\"] */(PropTypes.oneOf(['start', 'end', 'center']), (props) => {\n  if (props.pendingPosition === 'start' && !props.startIcon) {\n    return new Error(\n      `Material-UI: The pendingPosition=\"start\" should be used in combination with startIcon.`,\n    );\n  }\n  if (props.pendingPosition === 'end' && !props.endIcon) {\n    return new Error(\n      `Material-UI: The pendingPosition=\"end\" should be used in combination with endIcon.`,\n    );\n  }\n  return null;\n})",
        "chained": {
          "name": "union",
          "value": [
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "center"
            }
          ]
        }
      },
      "required": false,
      "description": "The pending indicator can be positioned on the start, end, or the center of the button.",
      "defaultValue": {
        "value": "'center'",
        "computed": false
      },
      "tags": []
    }
  },
  "name": "LoadingButton",
  "styles": {
    "classes": [
      "root",
      "pending",
      "pendingIndicator",
      "pendingIndicatorCenter",
      "pendingIndicatorStart",
      "pendingIndicatorEnd",
      "endIconPendingEnd",
      "startIconPendingStart",
      "labelPendingCenter"
    ],
    "name": "MuiLoadingButton",
    "descriptions": {
      "root": "Styles applied to the root element.",
      "pending": "Styles applied to the root element if `pending={true}`.",
      "pendingIndicator": "Styles applied to the pendingIndicator element.",
      "pendingIndicatorCenter": "Styles applied to the pendingIndicator element if `pendingPosition=\"center\"`.",
      "pendingIndicatorStart": "Styles applied to the pendingIndicator element if `pendingPosition=\"start\"`.",
      "pendingIndicatorEnd": "Styles applied to the pendingIndicator element if `pendingPosition=\"end\"`.",
      "endIconPendingEnd": "Styles applied to the endIcon element if `pending={true}` and `pendingPosition=\"end\"`.",
      "startIconPendingStart": "Styles applied to the startIcon element if `pending={true}` and `pendingPosition=\"start\"`.",
      "labelPendingCenter": "Styles applied to the label element if `pending={true}` and `pendingPosition=\"center\"`."
    },
    "globalClasses": {
      "root": "MuiLoadingButton-root",
      "pending": "MuiLoadingButton-pending",
      "pendingIndicator": "MuiLoadingButton-pendingIndicator",
      "pendingIndicatorCenter": "MuiLoadingButton-pendingIndicatorCenter",
      "pendingIndicatorStart": "MuiLoadingButton-pendingIndicatorStart",
      "pendingIndicatorEnd": "MuiLoadingButton-pendingIndicatorEnd",
      "endIconPendingEnd": "MuiLoadingButton-endIconPendingEnd",
      "startIconPendingStart": "MuiLoadingButton-startIconPendingStart",
      "labelPendingCenter": "MuiLoadingButton-labelPendingCenter"
    }
  },
  "spread": true,
  "forwardsRefTo": "HTMLButtonElement",
  "filename": "\\packages\\material-ui-lab\\src\\LoadingButton\\LoadingButton.js",
  "inheritance": {
    "component": "Button",
    "pathname": "/api/button"
  },
  "usedInPages": [
    "/components/buttons"
  ]
}
