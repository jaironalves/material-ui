{
  "description": "Provides context such as filled/focused/error/required for form inputs.\r\nRelying on the context provides high flexibility and ensures that the state always stays\r\nconsistent across the children of the `FormControl`.\r\nThis context is used by the following components:\r\n\r\n - FormLabel\r\n - FormHelperText\r\n - Input\r\n - InputLabel\r\n\r\nYou can find one composition example below and more going to [the demos](/components/text-fields/#components).\r\n\r\n```jsx\r\n<FormControl>\r\n  <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\r\n  <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n  <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\r\n</FormControl>\r\n```\r\n\r\n⚠️ Only one `InputBase` can be used within a FormControl because it create visual inconsistencies.\r\nFor instance, only one input can be focused at the same time, the state shouldn't be shared.",
  "displayName": "FormControl",
  "methods": [],
  "props": {
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "The contents of the form control.",
      "tags": []
    },
    "classes": {
      "type": {
        "name": "object"
      },
      "required": false,
      "description": "Override or extend the styles applied to the component.",
      "tags": []
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "",
      "tags": [
        {
          "title": "ignore",
          "description": null
        }
      ]
    },
    "color": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'primary'",
            "computed": false
          },
          {
            "value": "'secondary'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "The color of the component. It supports those theme colors that make sense for this component.",
      "jsdocDefaultValue": {
        "value": "'primary'"
      },
      "defaultValue": {
        "value": "'primary'",
        "computed": false
      },
      "tags": [
        {
          "title": "default",
          "description": "'primary'"
        }
      ]
    },
    "component": {
      "type": {
        "name": "elementType"
      },
      "required": false,
      "description": "The component used for the root node.\r\nEither a string to use a HTML element or a component.",
      "defaultValue": {
        "value": "'div'",
        "computed": false
      },
      "tags": []
    },
    "disabled": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the label, input and helper text should be displayed in a disabled state.",
      "jsdocDefaultValue": {
        "value": "false"
      },
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": [
        {
          "title": "default",
          "description": "false"
        }
      ]
    },
    "error": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the label should be displayed in an error state.",
      "jsdocDefaultValue": {
        "value": "false"
      },
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": [
        {
          "title": "default",
          "description": "false"
        }
      ]
    },
    "focused": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the component is displayed in focused state.",
      "tags": []
    },
    "fullWidth": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the component will take up the full width of its container.",
      "jsdocDefaultValue": {
        "value": "false"
      },
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": [
        {
          "title": "default",
          "description": "false"
        }
      ]
    },
    "hiddenLabel": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the label is hidden.\r\nThis is used to increase density for a `FilledInput`.\r\nBe sure to add `aria-label` to the `input` element.",
      "jsdocDefaultValue": {
        "value": "false"
      },
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": [
        {
          "title": "default",
          "description": "false"
        }
      ]
    },
    "margin": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'dense'",
            "computed": false
          },
          {
            "value": "'none'",
            "computed": false
          },
          {
            "value": "'normal'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "If `dense` or `normal`, will adjust vertical spacing of this and contained components.",
      "jsdocDefaultValue": {
        "value": "'none'"
      },
      "defaultValue": {
        "value": "'none'",
        "computed": false
      },
      "tags": [
        {
          "title": "default",
          "description": "'none'"
        }
      ]
    },
    "required": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the label will indicate that the input is required.",
      "jsdocDefaultValue": {
        "value": "false"
      },
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "tags": [
        {
          "title": "default",
          "description": "false"
        }
      ]
    },
    "size": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'medium'",
            "computed": false
          },
          {
            "value": "'small'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "The size of the text field.",
      "tags": []
    },
    "variant": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'filled'",
            "computed": false
          },
          {
            "value": "'outlined'",
            "computed": false
          },
          {
            "value": "'standard'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "The variant to use.",
      "jsdocDefaultValue": {
        "value": "'standard'"
      },
      "defaultValue": {
        "value": "'standard'",
        "computed": false
      },
      "tags": [
        {
          "title": "default",
          "description": "'standard'"
        }
      ]
    }
  },
  "name": "FormControl",
  "styles": {
    "classes": [
      "root",
      "marginNormal",
      "marginDense",
      "fullWidth"
    ],
    "name": "MuiFormControl",
    "descriptions": {
      "root": "Styles applied to the root element.",
      "marginNormal": "Styles applied to the root element if `margin=\"normal\"`.",
      "marginDense": "Styles applied to the root element if `margin=\"dense\"`.",
      "fullWidth": "Styles applied to the root element if `fullWidth={true}`."
    },
    "globalClasses": {
      "root": "MuiFormControl-root",
      "marginNormal": "MuiFormControl-marginNormal",
      "marginDense": "MuiFormControl-marginDense",
      "fullWidth": "MuiFormControl-fullWidth"
    }
  },
  "spread": true,
  "forwardsRefTo": "HTMLDivElement",
  "filename": "\\packages\\material-ui\\src\\FormControl\\FormControl.js",
  "inheritance": null,
  "usedInPages": [
    "/components/checkboxes",
    "/components/radio-buttons",
    "/components/switches",
    "/components/text-fields"
  ]
}
